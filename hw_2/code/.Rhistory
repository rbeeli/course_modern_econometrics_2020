# plot MSE depending on alpha
par(mfrow=c(1,1), mar=c(4,4,4,4))
plot(alphas, cv_min_mse, type='l',
xlab=expression(bold(alpha)), ylab='MSE',
main=expression(bold('Elastic Net MSE at different' ~ alpha ~ 's')))
1/15
1/0.15
1/8
alphas = seq(0, 1, by=0.125)
par(mfrow=c(3,3), mar=c(7,7,7,7))
for (i in 1:length(cv_models)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
# plot coefficients
par(mfrow=c(3,3), mar=c(7,7,7,7))
for (i in 1:length(cv_models)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3))
for (i in 1:length(cv_models)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
# plot coefficients
par(mfrow=c(3,3), mar=c(7,7,7,7))
for (i in 1:length(cv_models)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
# plot MSE
par(mfrow=c(3,3))
for (i in 1:length(cv_models)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
abline(v=mse_row_means)
abline(h=mse_row_means)
abline(h=mse_row_means, col='red', lty=2)
# plot MSE
par(mfrow=c(3,3))
for (i in 1:length(cv_models)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
abline(h=mse_row_means, col='red', lty=2)
}
# plot MSE depending on alpha
par(mfrow=c(1,1))
plot(alphas, cv_min_mse, type='l',
xlab=expression(bold(alpha)), ylab='MSE',
main=expression(bold('Elastic Net MSE at different' ~ alpha ~ 's')))
source('~/pCloudDrive/Uni/Master/4 Semester/Modern econometric and statistical learning methods/homeworks/hw_2/code/exercise_5.R', echo=TRUE)
# plot MSE
par(mfrow=c(3,3))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
abline(h=mse_row_means, col='red', lty=2)
}
par(mfrow=c(3,3), mar=c(6,6,6,6))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(5,6,6,6))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(3,6,6,6))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(4,6,6,6))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(4,4,6,6))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(4,5,6,6))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(4,4.5,6,6))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(4,4.5,5,6))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(4,4.5,5,5))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model, main=expression(bold('Elastic Net regression' ~ alpha==alphas[i])))
}
title(expression(bold('Elastic Net regression' ~ alpha==alphas[i])), line=1)
title(expression(bold('Elastic Net regression' ~ alpha==alphas[i])), line=-1)
title(expression(bold('Elastic Net regression' ~ alpha==alphas[i])), line=3)
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
title(expression(bold('Elastic Net regression' ~ alpha==alphas[i])), line=3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]))), line=3)
}
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0)
name = 'Ridge'
if (i == length(alphas))
name = 'LASSO'
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i])) ~ .(name), line=3))
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0)
name = 'Ridge'
if (i == length(alphas))
name = 'LASSO'
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) .(name))), line=3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0)
name = 'Ridge'
if (i == length(alphas))
name = 'LASSO'
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) .(name))), line=3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) .(name))), line=3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) .(name))), line=3)
}
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) ~ .(name))), line=3)
}
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) ~ .(name))), line=3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) ~ .(name))), line=3.5)
}
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) ~ .(name))), line=3.3)
}
# plot MSE depending on alpha
par(mfrow=c(1,1))
plot(alphas, cv_min_mse, type='l',
xlab=expression(bold(alpha)), ylab='MSE',
main=expression(bold('Elastic Net MSE at different' ~ alpha ~ 's')))
# plot MSE depending on alpha
par(mfrow=c(1,1))
plot(alphas, cv_min_mse, type='l',
xlab=expression(bold(alpha)), ylab='MSE',
main=expression(bold('Elastic Net MSE at different' ~ alpha)))
# plot coefficients
par(mfrow=c(3,3))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
# minimum MSEs
cv_min_mse
alphas
# minimum MSEs
cbind(alphas, cv_min_mse)
cbind(alphas, cv_min_mse, cv_min_mse == min(cv_min_mse))
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) ~ .(name))), line=3.3)
}
# plot MSE depending on alpha
par(mfrow=c(1,1))
plot(alphas, cv_min_mse, type='l',
xlab=expression(bold(alpha)), ylab='MSE',
main=expression(bold('Elastic Net MSE at different' ~ alpha)))
# plot coefficients
par(mfrow=c(3,3))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
# minimum MSEs
cbind(alphas, cv_min_mse, cv_min_mse == min(cv_min_mse))
# plot coefficients
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3), mar=c(4,2,5,1))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3), mar=c(4,3,5,1))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3), mar=c(4,3,3,1))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3), mar=c(4,3,3,3))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3), mar=c(4,3,3,5))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3), mar=c(4,3,3,5.5))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3), mar=c(2,3,3,5.5))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
par(mfrow=c(3,3), mar=c(2,3,3,6))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
# minimum MSEs
cbind(alphas, cv_min_mse, cv_min_mse == min(cv_min_mse))
# minimum MSEs
mse_row_means = mean((Y - rowMeans(X))^2)
# minimum MSEs
mean((Y - rowMeans(X))^2)
cbind(alphas, cv_min_mse, cv_min_mse == min(cv_min_mse))
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 0) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) ~ .(name))), line=3.3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (i == 1) {
name = 'Ridge'
}
if (i == length(alphas)) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) ~ .(name))), line=3.3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = ''
if (alphas[i] == 0) {
name = 'Ridge'
}
if (alphas[i] == 1) {
name = 'LASSO'
}
title(bquote(bold('Elastic Net regression' ~ alpha==.(alphas[i]) ~ .(name))), line=3.3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = 'Elastic Net'
if (alphas[i] == 0) {
name = ' - Ridge'
}
if (alphas[i] == 1) {
name = '- LASSO'
}
title(bquote(bold(.(name)' regression' ~ alpha==.(alphas[i]))), line=3.3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = 'Elastic Net'
if (alphas[i] == 0) {
name = ' - Ridge'
}
if (alphas[i] == 1) {
name = '- LASSO'
}
title(bquote(bold(.(name) ~ ' regression' ~ alpha==.(alphas[i]))), line=3.3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = 'Elastic Net'
if (alphas[i] == 0) {
name = ' - Ridge'
}
if (alphas[i] == 1) {
name = '- LASSO'
}
title(bquote(bold(.(name) ~ ' regression' ~ alpha==.(alphas[i]))), line=3.3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = 'Elastic Net'
if (alphas[i] == 0) {
name = 'Ridge'
}
if (alphas[i] == 1) {
name = 'LASSO'
}
title(bquote(bold(.(name) ~ ' regression' ~ alpha==.(alphas[i]))), line=3.3)
}
# plot MSE
par(mfrow=c(3,3), mar=c(4,4.5,5,1))
for (i in 1:length(alphas)) {
cv_model = cv_models[[i]]
plot(cv_model)
name = 'Elastic Net'
if (alphas[i] == 0) {
name = 'Ridge'
}
if (alphas[i] == 1) {
name = 'LASSO'
}
title(bquote(bold(.(name) ~ 'regression' ~ alpha==.(alphas[i]))), line=3.3)
}
# plot MSE depending on alpha
par(mfrow=c(1,1))
plot(alphas, cv_min_mse, type='l',
xlab=expression(bold(alpha)), ylab='MSE',
main=expression(bold('Elastic Net MSE at different' ~ alpha)))
# plot MSE depending on alpha
par(mfrow=c(1,1))
plot(alphas, cv_min_mse, type='l',
xlab=expression(bold(alpha)), ylab='MSE',
main=expression(bold('Elastic Net MSE at different' ~ alpha)))
# minimum MSEs
mean((Y - rowMeans(X))^2)
cbind(alphas, cv_min_mse, cv_min_mse == min(cv_min_mse))
cv_lambda = matrix(NA, length(alphas))
for (alpha in alphas) {
i = length(cv_models)+1
cv_fit = cv_models[[i]]
# # fit model using cross validation
# cv_fit = cv.glmnet(X, Y, alpha=alpha)
# cv_models[[i]] = cv_fit
#
# # coefficients at lambda with minimum MSE
# cv_coefs[[i]] = coef(cv_fit, s=cv_fit$lambda.min)
#
# # minimum MSE
# cv_min_mse[i] = cv_fit$cvm[which(cv_fit$lambda == cv_fit$lambda.min)]
# optimal lambda
cv_lambda[i] = cv_fit$lambda.min
}
cv_lambda = matrix(NA, length(alphas))
i = 0
for (alpha in alphas) {
# i = length(cv_models)+1
i=i+1
cv_fit = cv_models[[i]]
# # fit model using cross validation
# cv_fit = cv.glmnet(X, Y, alpha=alpha)
# cv_models[[i]] = cv_fit
#
# # coefficients at lambda with minimum MSE
# cv_coefs[[i]] = coef(cv_fit, s=cv_fit$lambda.min)
#
# # minimum MSE
# cv_min_mse[i] = cv_fit$cvm[which(cv_fit$lambda == cv_fit$lambda.min)]
# optimal lambda
cv_lambda[i] = cv_fit$lambda.min
}
cbind(alphas, cv_lambda)
# plot coefficients
par(mfrow=c(3,3), mar=c(2,3,3,6))
for (i in 1:length(alphas)) {
coefs = cv_coefs[[i]]
image.plot(matrix(coefs[-1], nrow=144), main=bquote(bold('Elastic Net regression' ~ alpha == .(alphas[i]))))
}
ncol(X)
mean((Y - rowMeans(X))^2)
